@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html>
<head>
    <title>浏览产品</title>
    <meta charset="UTF-8" />
    <!-- import CSS -->
    <link href="https://unpkg.com/element-ui/lib/theme-chalk/index.css"
          rel="stylesheet" />
</head>
<body style="margin: 0;">
    <el-container id="app">
        <el-main>
            <el-row>
                <el-col>
                    <el-menu :default-active="'全部'"
                             mode="horizontal"
                             v-on:select="onMenuItemSelect">
                        <el-menu-item :index="category"
                                      :key="category"
                                      v-for="(category,index) in categories">
                            {{category}}
                        </el-menu-item>
                    </el-menu>
                </el-col>
            </el-row>
            <el-row>
                <el-col style="padding: 10px;">

                    <el-button type="primary"
                               v-on:click="onTableButtonClick">
                        Table表单显示
                    </el-button>
                    <el-button type="success" plain 
                               icon="el-icon-shopping-cart-2"
                               v-on:click="onCartTableClick">
                        购物车列表
                    </el-button>
                    <el-button type="danger" plain 
                               icon="el-icon-user-solid"
                               v-on:click="onLoginClick">
                        登录
                    </el-button>
                    <el-button v-bind:icon="order==='asc'?'el-icon-caret-top':'el-icon-caret-botton'" v-on:click="onOrderButtonClick">
                        按产品价格{{order === 'asc' ? '升' : '降'}}序
                    </el-button>
                </el-col>
                <el-col :span="16"
                        style="padding: 10px;">
                    <el-input :clearable="true"
                              :span="16"
                              placeholder="请输入关键字"
                              v-model="keyword">
                        <el-button icon="el-icon-search"
                                   slot="append"
                                   v-on:click="onSearchButtonClick">

                        </el-button>
                    </el-input>
                </el-col>
            </el-row>
            <el-row>
                <el-col :span="8"
                        style="padding: 10px;"
                        v-for="product in products">
                    <el-card>
                        <div slot="header">
                            <span>{{product.productName}}</span>
                        </div>

                        <el-image :src="'/upload/' + product.imgUrl"
                                  fit="contain"
                                  style="height: 250px;">
                            <div slot="error">
                                <i class="el-icon-picture-outline"></i>
                            </div>
                        </el-image>

                        <ul>产品序号：{{product.productNumber}}</ul>
                        <ul>产品类型：{{product.productType}}</ul>
                        <ul>产品价格：{{product.price}}</ul>
                        <ul>库存：{{product.shuliang}}</ul>
                        <div style="text-align: right; border-top: #eeeeee solid 1px; padding-top: 20px; padding-bottom: 0">

                            <el-button icon="el-icon-shopping-cart-2"
                                       plain
                                       size="mini"
                                       v-on:click="onAddCartButtonClick(product.id)">
                                添加到购物车
                            </el-button>

                        </div>
                    </el-card>
                </el-col>
            </el-row>
        </el-main>
    </el-container>
    <!-- import Vue before Element -->
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <!-- import JavaScript -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/axios/0.19.2/axios.js"></script>
    <script>
        const app = new Vue({
            el: "#app",
            data: {
                // 获取到的所有产品数据放在这里（用于界面元素的绑定）
                products: [],
                keyword: '',
                order: 'asc',
                categories: ['全部', '快餐', '小吃', '饮料', '面食', '盖浇饭']

            },
            methods: {
                async GetAllProducts(order) {
                    // 获取所有产品数据
                    let response = await axios.get('/Product/GetAll', { params: { order: order } });

                    if (response.data.code === 'success') {
                        this.products = response.data.data;
                    } else {
                        this.$message({
                            message: '记录获取失败',
                            type: 'error'
                        });
                    }
                },
                async YanUser(id) {
                    // 检索用户是否登录
                    let response = await axios.get('/Login/YanUser',);

                    if (response.data.code === 'success') {
                        this.onAddCartClick(id);
                    } else {
                        this.$message({
                            message: '您还未登录',
                            type: 'error'
                        });
                        this.$confirm('您还未登录，请进入登录界面登录,确定进入登录页面吗？',
                                '提示',
                                {
                                    confirmButtonText: '确定',
                                    cancelButtonText: '取消',
                                    type: 'warning'
                                })
                            .then(async () => {
                                window.location.href = "/Login/Index";
                            })
                            .catch(async() => {
                                window.location.href = "/Product/UserOrder";
                            });;
                    }
                },
                onTableButtonClick() {
                    window.location.href = "/Product/TableOrder";
                },
                onCartTableClick() {
                    window.location.href = "/Product/CartTable";
                },
                onLoginClick() {
                    window.location.href = "/Login/Index";
                },
                onOrderButtonClick() {
                    if (this.order === 'asc') {
                        this.order = 'desc';
                    } else {
                        this.order = 'asc';
                    }

                    this.GetAllProducts(this.order);

                },
                onAddCartButtonClick(id) {
                    this.YanUser(id);
                    

                },

                async  onAddCartClick(id) {
                    let response = await axios.get('/Product/Cart/', { params: { id: id } });

                    if (response.data.code === 'success') {
                        this.$message({
                            message: '插入成功',
                            type: 'success'
                        });
                        this.GetAllProducts('desc');
                    } else {
                        this.$message({
                            message: '记录插入失败',
                            type: 'error'
                        });
                    }
                },
                async onSearchButtonClick() {
                    if (this.keyword === '') {
                        this.GetAllProducts(this.order);
                    } else {
                        this.GetAllProductsByKeyword(this.keyword);
                    }
                },
                async GetAllProductsByKeyword(keyword) {
                    let response = await axios.get('/Product/GetProductsByKeyword', { params: { keyword: keyword } });
                    if (response.data.code === 'success') {
                        this.products = response.data.data;
                    }

                },
                async GetAllProductsByCategory(category) {
                    let response = await axios.get('/Product/GetAllProductsByCategory', { params: { category: category } });

                    if (response.data.code === 'success') {
                        this.products = response.data.data;
                    }
                },
                onMenuItemSelect(index) {
                    if (index === '全部') {
                        this.GetAllProducts(this.order);
                    } else {
                        this.GetAllProductsByCategory(index);
                    }
                }
            },
            mounted() {
                this.GetAllProducts();
            }
        });
    </script>
</body>

</html>